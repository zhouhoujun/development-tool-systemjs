{"version":3,"sources":["SystemjsBundle.ts"],"names":[],"mappings":"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","file":"../SystemjsBundle.js","sourcesContent":["import * as _ from 'lodash';\r\nimport { IMap, task, RunWay, IAssertDist, ITaskContext, Src, Pipe, OutputPipe, ITaskInfo, TransformSource, ITransform, Operation, PipeTask, bindingConfig } from 'development-core';\r\nimport { Gulp } from 'gulp';\r\nimport * as path from 'path';\r\n// import * as url from 'url';\r\nimport { IBundlesConfig, IBundleGroup, IBuidlerConfig, IBundleMap, IBundleTransform } from './config';\r\n\r\nimport { readFileSync, readFile, existsSync, writeFileSync } from 'fs';\r\nimport * as chalk from 'chalk';\r\n\r\nconst replace = require('gulp-replace');\r\n// const globby = require('globby');\r\nconst Builder = require('systemjs-builder');\r\nconst source = require('vinyl-source-stream');\r\nconst vinylBuffer = require('vinyl-buffer');\r\nconst chksum = require('checksum');\r\nconst mkdirp = require('mkdirp');\r\nconst babel = require('gulp-babel');\r\n// const uglify = require('gulp-uglify');\r\n\r\n\r\n@task({\r\n    oper: Operation.release | Operation.deploy\r\n})\r\nexport class SystemjsBundle extends PipeTask {\r\n\r\n    name = 'systemjs-bundle';\r\n    runWay = RunWay.sequence;\r\n    private bundleMaps: IBundleMap[];\r\n    constructor(info?: ITaskInfo) {\r\n        super(info);\r\n    }\r\n\r\n    source(ctx: ITaskContext, dist: IAssertDist, gulp?: Gulp): TransformSource | Promise<TransformSource> {\r\n        let option = <IBundlesConfig>ctx.option;\r\n        if (option.bundles) {\r\n            return this.initBundles(<ITaskContext>ctx)\r\n                .then(() => {\r\n                    return Promise.all(_.map(this.getBundles(ctx), name => {\r\n                        return this.loadBuilder(ctx)\r\n                            .then(builder => {\r\n                                let bundle: IBundleGroup = this.bundleConfig[name];\r\n                                let bcfg = this.getBuildConfig(ctx);\r\n                                bundle.builder = <IBuidlerConfig>_.defaults(bundle.builder, bcfg);\r\n                                if (bundle.builder.config) {\r\n                                    builder.config(bundle.builder.config);\r\n                                }\r\n                                return this.groupBundle(<ITaskContext>ctx, builder, name, bundle, gulp)\r\n                                    .then(trans => this.translate(trans));\r\n                            });\r\n                    }))\r\n                }).then(groups => {\r\n                    return _.flatten<any>(groups);\r\n                });\r\n        } else {\r\n            return this.loadBuilder(ctx)\r\n                .then(builder => {\r\n                    let src = ctx.getSrc(this.getInfo());\r\n                    console.log('start bundle all src : ', chalk.cyan(<any>src));\r\n                    let bcfg = this.getBuildConfig(ctx);\r\n                    if (bcfg.config) {\r\n                        // builder.loadConfig(bcfg.config, undefined, true)\r\n                        builder.config(bcfg.config)\r\n                    }\r\n\r\n                    return ctx.fileFilter(src)\r\n                        .then(files => {\r\n                            files = this.getRelativeSrc(ctx, files);\r\n                            console.log('bundle files:', chalk.cyan(<any>files));\r\n                            let mainfile = this.getBundleManifestPath(<ITaskContext>ctx);\r\n                            return this.createBundler(<ITaskContext>ctx, builder, 'bundle', files.join(' + '), mainfile, bcfg)\r\n                                .then(trans => this.translate(trans));\r\n                        });\r\n                });\r\n        }\r\n    }\r\n\r\n    execute(context: ITaskContext, gulp: Gulp) {\r\n        this.bundleMaps = [];\r\n        let ctx = <ITaskContext>context;\r\n        return super.execute(ctx, gulp)\r\n            .then(() => {\r\n                let option = <IBundlesConfig>ctx.option;\r\n                if (option.bundles) {\r\n                    return this.calcChecksums(option, this.bundleMaps).then((checksums) => {\r\n                        return this.updateBundleManifest(ctx, this.bundleMaps, checksums);\r\n                    });\r\n                } else {\r\n                    return null;\r\n                }\r\n            }).then(manifest => {\r\n                if (manifest) {\r\n                    return this.writeBundleManifest(ctx, manifest, gulp)\r\n                        .then(() => {\r\n                            console.log(chalk.green('------ Complete -------------'));\r\n                        });\r\n                } else {\r\n                    console.log(chalk.green('------ Complete -------------'));\r\n                    return null;\r\n                }\r\n            });\r\n    }\r\n\r\n    setup(ctx: ITaskContext, gulp: Gulp) {\r\n        ctx.option = this.initOption(ctx);\r\n        return super.setup(ctx, gulp);\r\n    }\r\n\r\n    pipes(ctx: ITaskContext, dist: IAssertDist, gulp?: Gulp): Pipe[] {\r\n        let pipes = [];\r\n        let option = ctx.option as IBundlesConfig;\r\n        if (option.babelOptions) {\r\n            pipes.push(() => babel(option.babelOptions))\r\n        }\r\n        pipes = pipes.concat(super.pipes(ctx, dist, gulp) || []);\r\n        let ps = this.getAssertResetPipe(ctx);\r\n        if (ps && ps.length > 0) {\r\n            pipes = pipes.concat(ps);\r\n        }\r\n        return pipes;\r\n    }\r\n\r\n    protected working(source: ITransform, ctx: ITaskContext, option: IAssertDist, gulp: Gulp, pipes?: Pipe[], output?: OutputPipe[]) {\r\n        let bundle = <IBundleMap>source['bundle'];\r\n        return super.working(source, ctx, option, gulp, pipes, output)\r\n            .then(() => {\r\n                let bundlemap: IBundleMap = {\r\n                    path: bundle.path,\r\n                    modules: bundle.modules\r\n                };\r\n                this.bundleMaps.push(bundlemap);\r\n                if (bundle.sfx) {\r\n                    console.log(`Built sfx package: ${chalk.cyan(bundle.bundleName)} -> ${chalk.cyan(bundle.filename)}\\n   dest: ${chalk.cyan(bundle.bundleDest)}`);\r\n                } else {\r\n                    console.log(`Bundled package: ${chalk.cyan(bundle.bundleName)} -> ${chalk.cyan(bundle.filename)}\\n   dest: ${chalk.cyan(bundle.bundleDest)}`);\r\n                }\r\n                return;\r\n            });\r\n    }\r\n\r\n\r\n    protected getOption(config: ITaskContext): IAssertDist {\r\n        return config.option;\r\n    }\r\n\r\n    protected loadBuilder(ctx: ITaskContext): Promise<any> {\r\n        let option = <IBundlesConfig>ctx.option;\r\n        // let baseURL = ctx.toUrl(ctx.getRootPath(), <string>option.baseURL) || '';\r\n        let jsbuilder = new Builder('./', _.isArray(option.systemConfig) ? _.first(option.systemConfig) : <string>option.systemConfig);\r\n\r\n        return Promise.resolve(jsbuilder)\r\n            .then(builder => {\r\n                if (_.isArray(option.systemConfig) && option.systemConfig.length > 1) {\r\n                    return Promise.all(option.systemConfig.map(cf => builder.loadConfig(cf, undefined, true)))\r\n                        .then(() => {\r\n                            return builder;\r\n                        });\r\n                } else {\r\n                    return builder;\r\n                }\r\n            });\r\n    }\r\n\r\n    private translate(trans: IBundleTransform | IBundleTransform[]): ITransform | ITransform[] {\r\n        if (_.isArray(trans)) {\r\n            return _.map(trans, t => {\r\n                t.stream['bundle'] = t.bundle;\r\n                return t.stream;\r\n            });\r\n        } else {\r\n            trans.stream['bundle'] = trans.bundle;\r\n            return trans.stream;\r\n        }\r\n    }\r\n\r\n    private bundleConfig: IMap<IBundleGroup>;\r\n    protected initBundles(ctx: ITaskContext): Promise<IMap<IBundleGroup>> {\r\n        let opt = <IBundlesConfig>ctx.option;\r\n        let pr = Promise.resolve<IMap<IBundleGroup>>(null)\r\n            .then(() => ctx.to<IMap<IBundleGroup> | Promise<IMap<IBundleGroup>>>(opt.bundles));\r\n\r\n        if (opt.bundleDeps) {\r\n            pr = pr.then(bundles => {\r\n                let pkg = ctx.getPackage(<string>opt.packageFile);\r\n                if (!pkg) {\r\n                    console.log(chalk.red('can not found package.json file.'));\r\n                    process.exit(0);\r\n                }\r\n\r\n                let deps = opt.dependencies ? ctx.to<string[]>(opt.dependencies) : _.keys(pkg.dependencies);\r\n                if (!deps || deps.length < 0) {\r\n                    console.log(chalk.red('not set bundle dependencies libs.'));\r\n                    process.exit(0);\r\n                }\r\n                if (opt.depsExclude) {\r\n                    let exclude = _.isFunction(opt.depsExclude) ? opt.depsExclude(ctx, deps) : opt.depsExclude;\r\n                    deps = _.filter(deps, d => exclude.indexOf(d) < 0);\r\n                }\r\n\r\n                return Promise.resolve()\r\n                    .then(() => {\r\n                        if (_.isFunction(opt.bundleDeps)) {\r\n                            // opt['_bundleDepsFunc'] = opt.bundleDeps;\r\n                            return opt.bundleDeps(ctx, deps);\r\n                        } else if (_.isBoolean(opt.bundleDeps)) {\r\n                            return {\r\n                                deplibs: {\r\n                                    combine: true,\r\n                                    items: deps\r\n                                }\r\n                            };\r\n                        } else {\r\n                            return opt.bundleDeps;\r\n                        }\r\n                    })\r\n                    .then(bundleDeps => {\r\n\r\n                        let cores = _.keys(bundleDeps);\r\n                        _.each(_.keys(bundles), n => {\r\n                            let b: IBundleGroup = bundles[n];\r\n                            b.exclude = b.exclude || [];\r\n                            b.exclude = cores.concat(b.exclude);\r\n                            bundleDeps[n] = b;\r\n                        });\r\n\r\n                        return bundleDeps;\r\n                    });\r\n            });\r\n        }\r\n\r\n        return pr.then(bundles => {\r\n            this.bundleConfig = bundles;\r\n            console.log('group bundles setting:\\n', bundles, '---------------------------------\\n');\r\n            return bundles;\r\n        });\r\n\r\n    }\r\n\r\n    private getRelativeSrc(ctx: ITaskContext, src: Src, toModule = false): string[] {\r\n        let baseURL = <string>(<IBundlesConfig>ctx.option).bundleBaseDir;\r\n        if (_.isArray(src)) {\r\n            return _.map(src, s => {\r\n                let filename = ctx.toUrl(baseURL, s);\r\n                return toModule ? this.toModulePath(filename) : filename;\r\n            });\r\n        } else {\r\n            let fn = ctx.toUrl(baseURL, src);\r\n            return [(toModule ? this.toModulePath(fn) : fn)];\r\n        }\r\n    }\r\n\r\n    private toModulePath(filename: string): string {\r\n        if (!filename) {\r\n            return '';\r\n        }\r\n        return filename.substring(0, filename.length - path.extname(filename).length);\r\n    }\r\n\r\n    private initOption(ctx: ITaskContext) {\r\n        let option = <IBundlesConfig>_.extend({}, <IBundlesConfig>{\r\n            baseURL: '',\r\n            bundleBaseDir: '.',\r\n            mainfile: 'bundle.js',\r\n            systemConfig: '',\r\n            packageFile: 'package.json',\r\n            dest: '',\r\n            file: '',\r\n            systemConfigTempl: '',\r\n            relationToRoot: '',\r\n            bust: '',\r\n            bundles: null,\r\n            bundlePaths(ctx) {\r\n                let paths: any = {};\r\n                let bundleDest = ctx.getDist();\r\n                let rootpath = <string>option.bundleBaseDir;\r\n                let pjtroot = ctx.getRootPath();\r\n                ctx.getFolders(rootpath, (f, d) => {\r\n                    if (f !== bundleDest) {\r\n                        let p = d + '/*';\r\n                        paths[p] = ctx.toUrl(pjtroot, path.join(rootpath, p));\r\n                    }\r\n                    return '';\r\n                });\r\n                // let npmpkg = ctx.toRootPath('./node_modules'); // ctx.getPackage()[''];\r\n                // let jp = path.basename(npmpkg) + '/*';\r\n                // paths[jp] = ctx.toUrl(pjtroot, npmpkg + '/*');\r\n                console.log('paths: ', paths);\r\n                return paths;\r\n            },\r\n            includePackageFiles: [\r\n                'node_modules/systemjs/dist/system-polyfills.src.js',\r\n                'node_modules/systemjs/dist/system.src.js'\r\n            ],\r\n            jspmMates: {\r\n                '*.css': {\r\n                    loader: 'css'\r\n                },\r\n                '*.json': {\r\n                    loader: 'json'\r\n                },\r\n                '*.jsx': {\r\n                    loader: 'jsx'\r\n                }\r\n            },\r\n            babelOptions: {\r\n                'presets': ['es2015', 'stage-0'],\r\n                'plugins': ['transform-es2015-modules-systemjs', 'transform-flow-strip-types']\r\n            },\r\n            builder: {\r\n                sfx: false,\r\n                minify: false,\r\n                mangle: false,\r\n                sourceMaps: false,\r\n                separateCSS: false,\r\n                lowResSourceMaps: true\r\n            }\r\n        }, <IBundlesConfig>ctx.option);\r\n\r\n        ctx.option = option;\r\n\r\n        option.baseURL = ctx.toStr(option.baseURL) || './';\r\n        if (!option.bundleBaseDir && ctx.parent) {\r\n            option.bundleBaseDir = ctx.parent.getDist();\r\n        } else if (option.bundleBaseDir) {\r\n            option.bundleBaseDir = ctx.toRootPath(ctx.toStr(option.bundleBaseDir));\r\n        } else {\r\n            console.log(chalk.red('bundleBaseURL config error!'));\r\n            process.exit(0);\r\n        }\r\n\r\n        option.includes = option.includes || [];\r\n        (option.includePackageFiles || []).forEach(f => {\r\n            option.includes.push(ctx.toRootPath(f));\r\n        });\r\n\r\n        if (option.systemConfig) {\r\n            option.systemConfig = ctx.toRootSrc(ctx.toSrc(option.systemConfig));\r\n        }\r\n        option.packageFile = ctx.toRootPath(ctx.toStr(option.packageFile));\r\n        option.mainfile = ctx.toStr(option.mainfile);\r\n\r\n        return option;\r\n    }\r\n\r\n    protected getBuildConfig(ctx: ITaskContext) {\r\n        let option = <IBundlesConfig>ctx.option;\r\n        if (!option.builder.config) {\r\n            option.builder.config = _.extend(option.builder.config || {}, {\r\n                paths: ctx.to<IMap<string>>(option.bundlePaths) || {},\r\n                rootURL: <string>option.bundleBaseDir\r\n            });\r\n        }\r\n\r\n        return option.builder;\r\n    }\r\n\r\n    private restps: Pipe[];\r\n    protected getAssertResetPipe(ctx: ITaskContext) {\r\n        if (!this.restps) {\r\n            let option = <IBundlesConfig>ctx.option;\r\n            if (_.isUndefined(option.resetAsserts)) {\r\n                option.resetAsserts = 'assets';\r\n            }\r\n            if (option.resetAsserts) {\r\n                let folders: string[];\r\n                if (_.isString(option.resetAsserts)) {\r\n                    let pth = ctx.toDistPath(option.resetAsserts, this.getInfo());\r\n                    if (existsSync(pth)) {\r\n                        folders = ctx.getFolders(pth);\r\n                        folders.push(pth);\r\n                    } else {\r\n                        console.log(chalk.yellow('rest css asserts folders:', pth, 'not exists.'))\r\n                    }\r\n                } else {\r\n                    folders = <string[]>ctx.toDistSrc(option.resetAsserts, this.getInfo());\r\n                }\r\n\r\n                folders = folders || [];\r\n\r\n                let ps = [];\r\n                let dist = ctx.getDist(this.getInfo());\r\n                let baseURL = <string>option.baseURL; // ctx.toUrl(ctx.getRootPath(), <string>option.baseURL) || '.';\r\n                let root = ctx.getRootPath();\r\n                let urlprefix1 = \"url\\\\(\\\\'(\\\\/){0,1}\";\r\n                let urlprefix2 = 'url\\\\(\\\\\"(\\\\/){0,1}';\r\n                let urlprefix3 = 'url\\\\((\\\\/){0,1}';\r\n                let urlprefix4 = 'url\\\\(\\\\\\\\\"(\\\\/){0,1}';\r\n                let urlprefix5 = \"url\\\\(\\\\\\\\'(\\\\/){0,1}\";\r\n                let urlpath = '\\\\.\\\\.\\\\/';\r\n                _.each(folders, f => {\r\n                    let relp = ctx.toUrl(path.join(baseURL, ctx.toUrl(root, ctx.toUrl(dist, f))));\r\n                    let fm = path.basename(f);\r\n\r\n                    console.log('reset css url folder name:', chalk.cyan(fm), 'relate url:', chalk.cyan(relp));\r\n                    let reg1 = new RegExp(`(${urlprefix1}(${urlpath})+${fm})|(${urlprefix1}\\\\/${fm})`, 'gi');\r\n                    ps.push(() => replace(reg1, `url('${relp}`));\r\n\r\n                    let reg2 = new RegExp(`(${urlprefix2}(${urlpath})+${fm})|(${urlprefix2}\\\\/${fm})`, 'gi');\r\n                    ps.push(() => replace(reg2, `url(\"${relp}`));\r\n\r\n                    let reg3 = new RegExp(`(${urlprefix3}(${urlpath})+${fm})|(${urlprefix3}\\\\/${fm})`, 'gi');\r\n                    ps.push(() => replace(reg3, `url(${relp}`));\r\n\r\n                    let reg4 = new RegExp(`(${urlprefix4}(${urlpath})+${fm})|(${urlprefix4}\\\\/${fm})`, 'gi');\r\n                    ps.push(() => replace(reg4, `url(\\\\\"${relp}`));\r\n\r\n                    let reg5 = new RegExp(`(${urlprefix5}(${urlpath})+${fm})|(${urlprefix5}\\\\/${fm})`, 'gi');\r\n                    ps.push(() => replace(reg5, `url(\\\\'${relp}`));\r\n\r\n                });\r\n                this.restps = ps;\r\n            } else {\r\n                this.restps = [];\r\n            }\r\n        }\r\n        return this.restps;\r\n    }\r\n\r\n\r\n    protected getBundles(ctx: ITaskContext) {\r\n\r\n        let groups = [];\r\n        if (ctx.env.gb) {\r\n            groups = _.uniq(_.isArray(ctx.env.gb) ? ctx.env.gb : (ctx.env.gb || '').split(','));\r\n        }\r\n\r\n        if (groups.length < 1) {\r\n            groups = _.keys(this.bundleConfig);\r\n        } else {\r\n            groups = _.filter(groups, f => f && this.bundleConfig[f]);\r\n        }\r\n        console.log('cmmand group bundle:', chalk.cyan(<any>groups));\r\n        return groups;\r\n    }\r\n\r\n    protected groupBundle(config: ITaskContext, builder, name: string, bundleGp: IBundleGroup, gulp: Gulp): Promise<IBundleTransform | IBundleTransform[]> {\r\n\r\n        let bundleStr = '';\r\n        let bundleDest = '';\r\n\r\n        let bundleItems: string[] = [];\r\n        let minusStr = this.exclusionString(bundleGp.exclude, this.bundleConfig);\r\n\r\n        if (bundleGp.items) {\r\n            bundleItems = _.isArray(bundleItems) ? <string[]>bundleGp.items : _.keys(bundleGp.items);\r\n        }\r\n\r\n        if (bundleGp.combine) {\r\n            bundleDest = this.getBundleDest(config, name, bundleGp);\r\n            bundleStr = bundleItems.join(' + ') + minusStr;\r\n            console.log(`Bundling group: ${chalk.cyan(name)} ... \\ngroup source:\\n  ${chalk.cyan(bundleStr)}\\n-------------------------------`);\r\n            return this.createBundler(config, builder, name, bundleStr, bundleDest, bundleGp.builder, bundleGp);\r\n\r\n        } else {\r\n            console.log(`Bundling group: ${chalk.cyan(name)} ... \\ngroup items:\\n  ${chalk.cyan(<any>bundleItems)}\\n-------------------------------`);\r\n            return Promise.all(bundleItems.map(key => {\r\n                bundleStr = key + minusStr;\r\n                bundleDest = this.getBundleDest(config, key, bundleGp);\r\n                return this.createBundler(config, builder, key, bundleStr, bundleDest, bundleGp.builder, bundleGp);\r\n            }));\r\n        }\r\n    }\r\n\r\n    private exclusionString(exclude, groups): string {\r\n        let str = this.exclusionArray(exclude, groups).join(' - ');\r\n        return (str) ? ' - ' + str : '';\r\n    }\r\n\r\n    private exclusionArray(exclude, groups): string[] {\r\n        let minus: string[] = [];\r\n        exclude = (_.isArray(exclude)) ? exclude : _.keys(exclude);\r\n        _.forEach(exclude, (item: string) => {\r\n            var group = groups[item];\r\n            if (group) {\r\n                // exclude everything from this group\r\n                minus = minus.concat(this.exclusionArray(group.items, groups));\r\n            } else {\r\n                // exclude this item by name\r\n                minus.push(item);\r\n            }\r\n        });\r\n        return minus;\r\n    }\r\n\r\n    private createBundler(config: ITaskContext, builder: any, bundleName: string, bundleStr: string, bundleDest: string, builderCfg: IBuidlerConfig, bundleGp?: IBundleGroup): Promise<IBundleTransform> {\r\n\r\n        let sfx = builderCfg.sfx;\r\n        let bundler = (sfx === true) ? builder.buildStatic : builder.bundle;\r\n        let shortPath = this.getBundleShortPath(config, bundleName, bundleGp);\r\n        let filename = path.parse(bundleDest).base;\r\n\r\n\r\n        let opts: any = _.extend({ outFile: bundleDest }, builderCfg || {});\r\n        if (!('normalize' in opts)) {\r\n            opts.normalize = true;\r\n        }\r\n        if (!('lowResSourceMaps' in opts)) {\r\n            opts.lowResSourceMaps = true;\r\n        }\r\n\r\n        return bundler.bind(builder)(bundleStr, bundleDest, opts)\r\n            .then(output => {\r\n                mkdirp.sync(path.dirname(bundleDest));\r\n                var stream: ITransform = source(filename);\r\n                stream.write(output.source);\r\n                process.nextTick(function () {\r\n                    stream.end();\r\n                });\r\n                // console.log('pipe bundling：', chalk.cyan(output.source));\r\n                // console.log('pipe bundling：', chalk.cyan(output.modules));\r\n                console.log('pipe bundling：', chalk.cyan(bundleName));\r\n                return {\r\n                    stream: stream.pipe(vinylBuffer()),\r\n                    bundle: {\r\n                        path: shortPath,\r\n                        sfx: sfx,\r\n                        bundleName: bundleName,\r\n                        filename: filename,\r\n                        bundleDest: bundleDest,\r\n                        modules: output.modules\r\n                    }\r\n                };\r\n            });\r\n\r\n    }\r\n\r\n    private calcChecksums(option: IBundlesConfig, bundles: any[]): Promise<any> {\r\n        let chksums = {};\r\n\r\n        console.log('Calculating checksums...');\r\n\r\n        return Promise.all(_.map(bundles, (bundle: any) => {\r\n            if (!_.isObject(bundle)) {\r\n                return null;\r\n            }\r\n\r\n            return new Promise((resolve, reject) => {\r\n                let filepath = path.join(<string>option.bundleBaseDir || '.', bundle.path);\r\n                let filename = path.parse(bundle.path).base;\r\n                chksum.file(filepath, (err, sum) => {\r\n                    if (err) {\r\n                        console.error(chalk.red(' Checksum Error:'), chalk.red(err));\r\n                    }\r\n                    console.log(filename, chalk.cyan(sum));\r\n                    chksums[bundle.path] = sum;\r\n                    resolve(chksums);\r\n                });\r\n            });\r\n\r\n        })).then(() => {\r\n            return chksums;\r\n        });\r\n    }\r\n\r\n    protected updateBundleManifest(ctx: ITaskContext, bundles: any[], chksums?: any) {\r\n\r\n        chksums = chksums || {};\r\n\r\n        var manifest: any = _.defaults(this.getBundleManifest(ctx), {\r\n            bundles: {},\r\n            chksums: {}\r\n        });\r\n\r\n        // console.log(manifest);\r\n\r\n        _.each(bundles, bundle => {\r\n            if (bundle.path) {\r\n                manifest.bundles[bundle.path] = bundle.modules;\r\n                manifest.chksums[bundle.path] = chksums[bundle.path] || '';\r\n            }\r\n        });\r\n\r\n        return manifest;\r\n\r\n    }\r\n\r\n    private manifestSplit = `/*------bundles infos------*/`;\r\n    private writeBundleManifest(ctx: ITaskContext, manifest, gulp: Gulp): Promise<any> {\r\n        let option = <IBundlesConfig>ctx.option;\r\n        if (!option.mainfile) {\r\n            return Promise.reject('mainfile not configed.');\r\n        }\r\n\r\n\r\n        console.log('Writing manifest...');\r\n\r\n        let baseURL = ctx.toUrl(ctx.getRootPath(), <string>option.baseURL) || '.';\r\n        console.log('system config baseURL: ', chalk.cyan(baseURL));\r\n\r\n        let bust = ctx.toStr(option.bust);\r\n        console.log('system bust: ', chalk.cyan(bust));\r\n\r\n        let output = `\r\nSystem.config({\r\n    baseURL: '${baseURL}',\r\n    defaultJSExtensions: true\r\n});\r\nSystem.bundled = true;\r\nSystem.bust = '${bust}';\r\nif(window != undefined) window.prod = true;\r\n${this.manifestSplit}\r\n`;\r\n        let template = '';\r\n\r\n        if (manifest) {\r\n            // try {\r\n            template = ctx.toStr(option.systemConfigTempl);\r\n\r\n            if (!template) {\r\n                template = (bust) ? `\r\n(function(module) {\r\n    var bust = {};\r\n    var systemLocate = System.locate;\r\n    var systemNormalize = System.normalize;\r\n    var paths =  module.exports.paths = \\${paths} || {};\r\n    var chksums = module.exports.chksums = \\${chksums};\r\n    var bundles = module.exports.bundles = \\${bundles};                    \r\n    var maps = \\${ maps };\r\n    var jspmMeta = \\${ jspmMeta };\r\n\r\n    System.config({\r\n            packages: {\r\n            \"meta\": jspmMeta\r\n        },\r\n        map: maps,\r\n        paths: paths,\r\n        bundles: bundles\r\n    });\r\n\r\n    System.normalize = function (name, pName, pAddress) {\r\n        return systemNormalize.call(this, name, pName, pAddress).then(function (address) {\r\n            var chksum = chksums[name];\r\n            if (chksums[name]) { bust[address] = chksum; }\r\n            return address;\r\n        });\r\n    };\r\n\r\n    System.locate = function (load) {\r\n        return Promise.resolve(systemLocate.call(this, load)).then(function (address) {\r\n            var chksum = bust[address];\r\n            return (chksum) ? address + '?' + chksum : address;\r\n        });\r\n    };\r\n\r\n})((typeof module !== 'undefined') ? module : {exports: {}}, this);\r\n` : `\r\n(function(module) {\r\n    var bundles = module.exports.bundles = \\${bundles};\r\n    var paths =  module.exports.paths = \\${paths} || {};\r\n    var maps = \\${ maps };\r\n    var jspmMeta = \\${ jspmMeta };\r\n\r\n    System.config({\r\n            packages: {\r\n            \"meta\": jspmMeta\r\n        },\r\n        map: maps,\r\n        paths: paths,\r\n        bundles: bundles\r\n    });\r\n\r\n})((typeof module !== 'undefined') ? module : {exports: {}}, this);\r\n`;\r\n            }\r\n\r\n\r\n            let maps = option.bundleMaps || {\r\n                css: '',\r\n                json: '',\r\n                text: ''\r\n            };\r\n\r\n            let cssSrc, jsonSrc, textSrc;\r\n            _.each(_.keys(manifest.bundles), n => {\r\n                if (!maps.css) {\r\n                    cssSrc = <string>_.find(manifest.bundles[n], (it: string) => /css(.min){0,1}.js$/.test(it));\r\n                    if (cssSrc) {\r\n                        maps.css = cssSrc;\r\n                    }\r\n                }\r\n\r\n                if (!maps.json) {\r\n                    jsonSrc = _.find(manifest.bundles[n], (it: string) => /json(.min){0,1}.js$/.test(it));\r\n                    if (jsonSrc) {\r\n                        maps.json = jsonSrc;\r\n                    }\r\n                }\r\n                if (!maps.text) {\r\n                    textSrc = <string>_.find(manifest.bundles[n], (it: string) => /text(.min){0,1}.js$/.test(it));\r\n                    if (textSrc) {\r\n                        maps.text = textSrc;\r\n                    }\r\n                }\r\n            });\r\n\r\n            let jspmMetas = option.jspmMates;\r\n            output += _.template(template)({\r\n                maps: JSON.stringify(maps, null, '    '),\r\n                jspmMeta: JSON.stringify(jspmMetas, null, '    '),\r\n                paths: JSON.stringify(null, null, '    '), // option.builder.config ? option.builder.config.paths :\r\n                chksums: JSON.stringify(manifest.chksums, null, '    '),\r\n                bundles: JSON.stringify(manifest.bundles, null, '    '),\r\n            });\r\n\r\n        }\r\n\r\n\r\n        let includes = option.includes || [];\r\n        return Promise.all(_.map(includes, f => {\r\n            return new Promise<string>((resolve, reject) => {\r\n                readFile(f, 'utf8', (err, data) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    } else {\r\n                        resolve(data);\r\n                    }\r\n                });\r\n            });\r\n        }))\r\n            .then(data => {\r\n                data.push(output);\r\n                let mainfile = ctx.toStr(option.mainfile); // path.relative(this.getBundleManifestPath(ctx), ctx.getDist(this.getInfo()));\r\n                console.log('mainfile:', mainfile);\r\n                mkdirp.sync(path.dirname(mainfile));\r\n                var stream = <NodeJS.ReadWriteStream>source(mainfile);\r\n                stream.write(data.join('\\n'));\r\n                process.nextTick(() => {\r\n                    stream.end();\r\n                });\r\n\r\n                return super.working(stream.pipe(vinylBuffer()), ctx, option, gulp, option.mainfilePipes || [], option.mainfileOutput);\r\n            });\r\n\r\n    }\r\n\r\n    private getBundleManifestPath(ctx: ITaskContext): string {\r\n        return this.getBundleDest(ctx, <string>(<IBundlesConfig>ctx.option).mainfile);\r\n    }\r\n    private getBundleManifest(ctx: ITaskContext): any {\r\n        let data: any = {};\r\n        let mainfile: string = this.getBundleManifestPath(ctx);\r\n        console.log('try to load old bundle in path ', mainfile);\r\n        if (existsSync(mainfile)) {\r\n            try {\r\n                let content = readFileSync(mainfile, 'utf8');\r\n                let idx = content.indexOf(this.manifestSplit);\r\n                idx = idx > 0 ? (idx + this.manifestSplit.length) : 0;\r\n                content = content.substring(idx);\r\n                // console.log(content);\r\n                writeFileSync(mainfile, content);\r\n                data = require(mainfile);\r\n                console.log('has old bundle：\\n', chalk.cyan(mainfile)); // , 'data:\\n', data);\r\n            } catch (e) {\r\n                console.log(chalk.red(e));\r\n            }\r\n        } else {\r\n            console.log('no old bundle：\\n', chalk.cyan(mainfile)); // , 'data:\\n', data);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    private getBundleShortPath(ctx: ITaskContext, bundleName: string, bundleGp?: IBundleGroup) {\r\n        var fullPath = bundleGp ? this.getBundleDest(ctx, bundleName, bundleGp)\r\n            : path.join(ctx.getDist(), bundleName);\r\n\r\n        return ctx.toUrl(<string>(<IBundlesConfig>ctx.option).bundleBaseDir, fullPath)\r\n\r\n    }\r\n\r\n    private getBundleDest(ctx: ITaskContext, bundleName: string, bundleGp?: IBundleGroup) {\r\n\r\n        let dest = ctx.getDist();\r\n        if (bundleGp) {\r\n            let min = bundleGp.builder.minify;\r\n            let name = bundleGp.items[bundleName] || bundleName;\r\n            let file = name + ((min) ? '.min.js' : '.js');\r\n\r\n            if (bundleGp.combine) {\r\n                dest = path.join(dest, file);\r\n            } else {\r\n                dest = path.join(dest, bundleName, file);\r\n            }\r\n        } else {\r\n            dest = path.join(dest, bundleName);\r\n        }\r\n\r\n        return dest;\r\n    }\r\n}\r\n"]}